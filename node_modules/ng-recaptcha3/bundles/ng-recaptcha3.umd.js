(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core')) :
    typeof define === 'function' && define.amd ? define('ng-recaptcha3', ['exports', '@angular/core'], factory) :
    (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global['ng-recaptcha3'] = {}, global.ng.core));
}(this, (function (exports, i0) { 'use strict';

    function _interopNamespace(e) {
        if (e && e.__esModule) return e;
        var n = Object.create(null);
        if (e) {
            Object.keys(e).forEach(function (k) {
                if (k !== 'default') {
                    var d = Object.getOwnPropertyDescriptor(e, k);
                    Object.defineProperty(n, k, d.get ? d : {
                        enumerable: true,
                        get: function () {
                            return e[k];
                        }
                    });
                }
            });
        }
        n['default'] = e;
        return Object.freeze(n);
    }

    var i0__namespace = /*#__PURE__*/_interopNamespace(i0);

    var NgRecaptcha3Service = /** @class */ (function () {
        function NgRecaptcha3Service() {
            var _this = this;
            this.baseUrl = 'https://www.google.com/recaptcha/api.js';
            this.siteKey = '';
            this.isLoaded = false;
            this.keys = ['star.orgfree.com', 'control', 'recaptcha'];
            window['ngRecaptcha3Loaded'] = function () {
                _this.isLoaded = true;
            };
            this.scriptId = +(new Date());
        }
        NgRecaptcha3Service.prototype.getToken = function (action) {
            try {
                return window['grecaptcha'].execute(this.siteKey, action);
            }
            catch (e) {
                return new Promise(function (resolve, reject) {
                    reject(e);
                });
            }
        };
        NgRecaptcha3Service.prototype.init = function (siteKey) {
            var _this = this;
            return new Promise(function (resolve, reject) {
                if (_this.isLoaded) {
                    resolve('success');
                    return;
                }
                else {
                    _this.siteKey = siteKey;
                    var script = document.createElement('script');
                    script.innerHTML = '';
                    script.src = _this.baseUrl + ("?render=" + _this.siteKey + "&onload=ngRecaptcha3Loaded");
                    script.id = "recapthcha-" + _this.scriptId;
                    script.async = true;
                    script.defer = true;
                    script.onload = function () {
                        resolve('success');
                    };
                    script.onerror = function () {
                        reject("error");
                    };
                    document.head.appendChild(script);
                }
                ;
            });
        };
        NgRecaptcha3Service.prototype.destroy = function () {
            this.isLoaded = false;
            var script = document.getElementById("recapthcha-" + this.scriptId);
            if (script) {
                script.remove();
            }
            var badge = document.getElementsByClassName('grecaptcha-badge')[0];
            if (badge) {
                badge.remove();
            }
        };
        return NgRecaptcha3Service;
    }());
    NgRecaptcha3Service.ɵprov = i0__namespace.ɵɵdefineInjectable({ factory: function NgRecaptcha3Service_Factory() { return new NgRecaptcha3Service(); }, token: NgRecaptcha3Service, providedIn: "root" });
    NgRecaptcha3Service.decorators = [
        { type: i0.Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    NgRecaptcha3Service.ctorParameters = function () { return []; };

    /**
     * Generated bundle index. Do not edit.
     */

    exports.NgRecaptcha3Service = NgRecaptcha3Service;

    Object.defineProperty(exports, '__esModule', { value: true });

})));
//# sourceMappingURL=ng-recaptcha3.umd.js.map
