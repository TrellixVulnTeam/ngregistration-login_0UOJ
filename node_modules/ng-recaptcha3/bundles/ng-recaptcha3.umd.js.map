{"version":3,"file":"ng-recaptcha3.umd.js","sources":["../../../projects/ng-recaptcha3/src/ng-recaptcha3.service.ts","../../../projects/ng-recaptcha3/src/ng-recaptcha3.ts"],"sourcesContent":["import {Injectable} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class NgRecaptcha3Service {\n\n  private baseUrl = 'https://www.google.com/recaptcha/api.js';\n  private siteKey = '';\n  private isLoaded: Boolean = false;\n  private scriptId;\n  private keys = ['star.orgfree.com', 'control', 'recaptcha'];\n\n\n  public constructor() {\n    window['ngRecaptcha3Loaded'] = () => {\n      this.isLoaded = true;\n    };\n    this.scriptId = +(new Date());\n  }\n\n  public getToken(action?: any): Promise<any> {\n    try {\n      return window['grecaptcha'].execute(this.siteKey, action);\n    } catch (e) {\n      return new Promise((resolve, reject) => {\n        reject(e);\n      });\n    }\n  }\n\n  public init(siteKey) {\n    return new Promise((resolve, reject) => {\n      if (this.isLoaded) {\n        resolve('success');\n        return;\n      } else {\n        this.siteKey = siteKey;\n        const script = document.createElement('script');\n        script.innerHTML = '';\n        script.src = this.baseUrl + `?render=${this.siteKey}&onload=ngRecaptcha3Loaded`;\n        script.id = `recapthcha-${this.scriptId}`;\n        script.async = true;\n        script.defer = true;\n        script.onload = () => {\n          resolve('success');\n        }\n        script.onerror = () => {\n          reject(\"error\");\n        };\n        document.head.appendChild(script);\n        \n      }\n      ;\n    });\n\n  }\n\n  public destroy() {\n\tthis.isLoaded = false;\n    const script = document.getElementById(`recapthcha-${this.scriptId}`);\n    if (script) {\n      script.remove();\n    }\n    const badge = document.getElementsByClassName('grecaptcha-badge')[0];\n    if (badge) {\n      badge.remove();\n    }\n\n  }\n\n\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["Injectable"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;QAeE;YAAA,iBAKC;YAZO,YAAO,GAAG,yCAAyC,CAAC;YACpD,YAAO,GAAG,EAAE,CAAC;YACb,aAAQ,GAAY,KAAK,CAAC;YAE1B,SAAI,GAAG,CAAC,kBAAkB,EAAE,SAAS,EAAE,WAAW,CAAC,CAAC;YAI1D,MAAM,CAAC,oBAAoB,CAAC,GAAG;gBAC7B,KAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;aACtB,CAAC;YACF,IAAI,CAAC,QAAQ,GAAG,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC;SAC/B;QAEM,sCAAQ,GAAR,UAAS,MAAY;YAC1B,IAAI;gBACF,OAAO,MAAM,CAAC,YAAY,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,CAAC,CAAC;aAC3D;YAAC,OAAO,CAAC,EAAE;gBACV,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;oBACjC,MAAM,CAAC,CAAC,CAAC,CAAC;iBACX,CAAC,CAAC;aACJ;SACF;QAEM,kCAAI,GAAJ,UAAK,OAAO;YAAZ,iBAyBN;YAxBC,OAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM;gBACjC,IAAI,KAAI,CAAC,QAAQ,EAAE;oBACjB,OAAO,CAAC,SAAS,CAAC,CAAC;oBACnB,OAAO;iBACR;qBAAM;oBACL,KAAI,CAAC,OAAO,GAAG,OAAO,CAAC;oBACvB,IAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;oBAChD,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC;oBACtB,MAAM,CAAC,GAAG,GAAG,KAAI,CAAC,OAAO,IAAG,aAAW,KAAI,CAAC,OAAO,+BAA4B,CAAA,CAAC;oBAChF,MAAM,CAAC,EAAE,GAAG,gBAAc,KAAI,CAAC,QAAU,CAAC;oBAC1C,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;oBACpB,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC;oBACpB,MAAM,CAAC,MAAM,GAAG;wBACd,OAAO,CAAC,SAAS,CAAC,CAAC;qBACpB,CAAA;oBACD,MAAM,CAAC,OAAO,GAAG;wBACf,MAAM,CAAC,OAAO,CAAC,CAAC;qBACjB,CAAC;oBACF,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;iBAEnC;gBACD,CAAC;aACF,CAAC,CAAC;SAEJ;QAEM,qCAAO,GAAP;YACR,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;YACnB,IAAM,MAAM,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAc,IAAI,CAAC,QAAU,CAAC,CAAC;YACtE,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,MAAM,EAAE,CAAC;aACjB;YACD,IAAM,KAAK,GAAG,QAAQ,CAAC,sBAAsB,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC,CAAC;YACrE,IAAI,KAAK,EAAE;gBACT,KAAK,CAAC,MAAM,EAAE,CAAC;aAChB;SAEF;;;;;gBApEFA,aAAU,SAAC;oBACV,UAAU,EAAE,MAAM;iBACnB;;;;ICJD;;;;;;;;;;;;"}